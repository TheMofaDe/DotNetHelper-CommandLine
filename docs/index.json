{
  "api/DotNetHelper_CommandLine.UnixCommands.html": {
    "href": "api/DotNetHelper_CommandLine.UnixCommands.html",
    "title": "Class UnixCommands | DotNetHelper-CommandLine",
    "keywords": "Class UnixCommands Helper class for common commands Inheritance System.Object UnixCommands Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_CommandLine Assembly : DotNetHelper-CommandLine.dll Syntax public static class UnixCommands Methods | Improve this Doc View Source AbortShutDownOrReboot() returns the hcommand for aborting a shutdown or restart Declaration public static string AbortShutDownOrReboot() Returns Type Description System.String | Improve this Doc View Source CopyDirectory(String, String) Copy one directory to another Declaration public static string CopyDirectory(string from, string to) Parameters Type Name Description System.String from System.String to Returns Type Description System.String | Improve this Doc View Source CreateDirectory(String) returns the command to create the specified directory Declaration public static string CreateDirectory(string path) Parameters Type Name Description System.String path Returns Type Description System.String | Improve this Doc View Source GetAttribute(String) Sets ownership on files and directories Declaration public static string GetAttribute(string fileOrPath) Parameters Type Name Description System.String fileOrPath Returns Type Description System.String | Improve this Doc View Source GetEnvironmentVariables() Declaration public static string GetEnvironmentVariables() Returns Type Description System.String | Improve this Doc View Source GetOsVersion() return the command to get the Operating System version Declaration public static string GetOsVersion() Returns Type Description System.String | Improve this Doc View Source GetSystemInfo() return command for getting system info Declaration public static string GetSystemInfo() Returns Type Description System.String | Improve this Doc View Source GetTaskList() returns the command get the task list Declaration public static string GetTaskList() Returns Type Description System.String | Improve this Doc View Source MapDrive(Char, String) returns the command for mapping a drive Declaration public static string MapDrive(char driveLetter, string path) Parameters Type Name Description System.Char driveLetter System.String path Returns Type Description System.String | Improve this Doc View Source MoveFile(String, String) returns the commands for moving the specified file Declaration public static string MoveFile(string from, string to) Parameters Type Name Description System.String from System.String to Returns Type Description System.String | Improve this Doc View Source OpenControlPanel() returns the command for opening the control panel Declaration public static string OpenControlPanel() Returns Type Description System.String | Improve this Doc View Source OpenServices() returns the command for opening the services Declaration public static string OpenServices() Returns Type Description System.String | Improve this Doc View Source Ping(String) returns the command to get ping the specified host Declaration public static string Ping(string host) Parameters Type Name Description System.String host Returns Type Description System.String | Improve this Doc View Source Reboot(Boolean, Nullable<TimeSpan>, String) returns the command for rebooting the host Declaration public static string Reboot(bool force, TimeSpan? delay = default(TimeSpan? ), string message = null) Parameters Type Name Description System.Boolean force System.Nullable < System.TimeSpan > delay System.String message Returns Type Description System.String | Improve this Doc View Source RemoveDirectory(String) Windows has a y/ n prompt.To get the prompt with Unix, use rm - i.The i means \"interactive\". Declaration public static string RemoveDirectory(string directory) Parameters Type Name Description System.String directory Returns Type Description System.String | Improve this Doc View Source Shutdown(Boolean) returns the command for shutting down the host Declaration public static string Shutdown(bool force) Parameters Type Name Description System.Boolean force Returns Type Description System.String | Improve this Doc View Source TailFile(String, Int32) returns command for tailing the specified files Declaration public static string TailFile(string fullFilePath, int outputLastLine = 10) Parameters Type Name Description System.String fullFilePath System.Int32 outputLastLine Returns Type Description System.String | Improve this Doc View Source UnMapDrive(Char) returns the command for un-mapping a drive Declaration public static string UnMapDrive(char driveLetter) Parameters Type Name Description System.Char driveLetter Returns Type Description System.String"
  },
  "api/DotNetHelper_CommandLine.CommandPrompt.html": {
    "href": "api/DotNetHelper_CommandLine.CommandPrompt.html",
    "title": "Class CommandPrompt | DotNetHelper-CommandLine",
    "keywords": "Class CommandPrompt A command-line helper class that makes it easy to run commands. Inheritance System.Object CommandPrompt Implements System.IDisposable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_CommandLine Assembly : DotNetHelper-CommandLine.dll Syntax public class CommandPrompt : IDisposable Constructors | Improve this Doc View Source CommandPrompt(String, Boolean) Declaration public CommandPrompt(string cmdLocation = \"C:\\\\windows\\\\system32\\\\cmd.exe\", bool hideWindow = true) Parameters Type Name Description System.String cmdLocation System.Boolean hideWindow | Improve this Doc View Source CommandPrompt(String, String, Boolean) Declaration public CommandPrompt(string runAsUser, string cmdLocation = \"C:\\\\windows\\\\system32\\\\cmd.exe\", bool hideWindow = true) Parameters Type Name Description System.String runAsUser System.String cmdLocation System.Boolean hideWindow | Improve this Doc View Source CommandPrompt(String, String, String, Boolean) Declaration public CommandPrompt(string runAsUser, string password, string cmdLocation = \"C:\\\\windows\\\\system32\\\\cmd.exe\", bool hideWindow = true) Parameters Type Name Description System.String runAsUser System.String password System.String cmdLocation System.Boolean hideWindow Properties | Improve this Doc View Source CreateNoWindow Declaration public bool CreateNoWindow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RedirectStandardError Declaration public bool RedirectStandardError { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RedirectStandardOutput Declaration public bool RedirectStandardOutput { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RunAsUser Declaration public string RunAsUser { get; } Property Value Type Description System.String | Improve this Doc View Source UseShellExecute Declaration public bool UseShellExecute { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateSecurePassword(String) Declaration public SecureString CreateSecurePassword(string password) Parameters Type Name Description System.String password Returns Type Description System.Security.SecureString | Improve this Doc View Source CreateStartInfo(String, String, Boolean, DataReceivedEventHandler, DataReceivedEventHandler) Declaration public ProcessStartInfo CreateStartInfo(string command, string workingDirectory, bool hideWindow = true, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null) Parameters Type Name Description System.String command command to run System.String workingDirectory directory to run command from System.Boolean hideWindow if true will show cmd will show during execution of the command System.Diagnostics.DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command System.Diagnostics.DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command Returns Type Description System.Diagnostics.ProcessStartInfo | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source RunCommand(ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler, Int32) Declaration public int? RunCommand(ProcessStartInfo info, DataReceivedEventHandler outputDataReceived, DataReceivedEventHandler errorDataReceived, EventHandler exited, int timeoutInMilliseconds = 2147483647) Parameters Type Name Description System.Diagnostics.ProcessStartInfo info System.Diagnostics.DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command System.Diagnostics.DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command System.EventHandler exited System.Int32 timeoutInMilliseconds Returns Type Description System.Nullable < System.Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(string command, DataReceivedEventHandler outputDataReceived, DataReceivedEventHandler errorDataReceived, EventHandler exited) Parameters Type Name Description System.String command System.Diagnostics.DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command System.Diagnostics.DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command System.EventHandler exited Returns Type Description System.Nullable < System.Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, String) Declaration public int? RunCommand(string command, string workingDirectory) Parameters Type Name Description System.String command System.String workingDirectory Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RunCommand(String, String, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler, Int32) Declaration public int? RunCommand(string command, string workingDirectory, DataReceivedEventHandler outputDataReceived, DataReceivedEventHandler errorDataReceived, EventHandler exited, int timeoutInMilliseconds = 2147483647) Parameters Type Name Description System.String command the command to run System.String workingDirectory System.Diagnostics.DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command System.Diagnostics.DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command System.EventHandler exited System.Int32 timeoutInMilliseconds Returns Type Description System.Nullable < System.Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, String, EventHandler, Int32) Declaration public int? RunCommand(string command, string workingDirectory, EventHandler exited, int timeoutInMilliseconds = 2147483647) Parameters Type Name Description System.String command the command to run System.String workingDirectory System.EventHandler exited System.Int32 timeoutInMilliseconds Returns Type Description System.Nullable < System.Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, String, Int32) Declaration public int? RunCommand(string command, string workingDirectory, int timeoutInMilliseconds) Parameters Type Name Description System.String command the command to run System.String workingDirectory System.Int32 timeoutInMilliseconds Returns Type Description System.Nullable < System.Int32 > the process Exit Code | Improve this Doc View Source UpdateDefaultUserAndPassword(String, String) Declaration public void UpdateDefaultUserAndPassword(string runAsUser, string password) Parameters Type Name Description System.String runAsUser System.String password Implements System.IDisposable"
  },
  "api/DotNetHelper_CommandLine.html": {
    "href": "api/DotNetHelper_CommandLine.html",
    "title": "Namespace DotNetHelper_CommandLine | DotNetHelper-CommandLine",
    "keywords": "Namespace DotNetHelper_CommandLine Classes CommandPrompt A command-line helper class that makes it easy to run commands. UnixCommands Helper class for common commands"
  },
  "articles/sample.html": {
    "href": "articles/sample.html",
    "title": "Sample Article | DotNetHelper-CommandLine",
    "keywords": "Sample Article This is a example of how to reference an article"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-CommandLine | DotNetHelper-CommandLine",
    "keywords": "DotNetHelper-CommandLine A command-line helper class that makes it easy to run commands. This library also comes with commonly used command see api docs for examples Sample Code static void Main(string[] args) { var cmd = new CommandPrompt(); cmd.RunCommand(UnixCommands.Ping(\"www.google.com\"), null, OnDataReceived, ErrorDataReceived, Exited); cmd.RunCommand(UnixCommands.Ping(\"This is not a valid command\"), null, OnDataReceived, ErrorDataReceived, Exited); Console.ReadLine(); } private static void Exited(object sender, EventArgs e) { Console.WriteLine(\"command has finished.\"); } private static void ErrorDataReceived(object sender, DataReceivedEventArgs e) { Console.WriteLine(\"error : \" + e.Data); } private static void OnDataReceived(object sender, DataReceivedEventArgs args) { Console.WriteLine(\"received data : \" + args.Data); } } Results from sample code Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  }
}