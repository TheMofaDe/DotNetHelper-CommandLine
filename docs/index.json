{
  "api/DotNetHelper_CommandLine.CommandPrompt.html": {
    "href": "api/DotNetHelper_CommandLine.CommandPrompt.html",
    "title": "Class CommandPrompt | DotNetHelper-CommandLine",
    "keywords": "Class CommandPrompt A command-line helper class that makes it easy to run commands. Inheritance Object CommandPrompt Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : DotNetHelper_CommandLine Assembly : DotNetHelper-CommandLine.dll Syntax public class CommandPrompt : IDisposable Constructors | Improve this Doc View Source CommandPrompt() Declaration public CommandPrompt() | Improve this Doc View Source CommandPrompt(Boolean) Declaration public CommandPrompt(bool hideWindow) Parameters Type Name Description Boolean hideWindow | Improve this Doc View Source CommandPrompt(String, String, Boolean) Declaration public CommandPrompt(string runAsUser, string password, bool hideWindow) Parameters Type Name Description String runAsUser String password Boolean hideWindow Properties | Improve this Doc View Source CreateNoWindow Declaration public bool CreateNoWindow { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RunAsUser Declaration public string RunAsUser { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateSecurePassword(String) Declaration public SecureString CreateSecurePassword(string password) Parameters Type Name Description String password Returns Type Description SecureString | Improve this Doc View Source CreateStartInfo(String, String, Boolean) Declaration public ProcessStartInfo CreateStartInfo(string command, string workingDirectory = \"./\", bool hideWindow = true) Parameters Type Name Description String command the command to run String workingDirectory sets the working directory for the command to be run Boolean hideWindow Returns Type Description ProcessStartInfo a new instance of ProcessStartInfo | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source RunCommand(String, String) Starts a new instance of a command terminal and runs the specified command Declaration public Process RunCommand(string command, string workingDirectory = \"./\") Parameters Type Name Description String command the command to run String workingDirectory sets the working directory for the command to be run Returns Type Description Process the process | Improve this Doc View Source RunCommandAndWaitForExit(String, String, Nullable<TimeSpan>) Starts a new instance of a command terminal and runs the specified command and wait for it to exit Declaration public (Process process, bool? didProcessExit) RunCommandAndWaitForExit(string command, string workingDirectory = \"./\", TimeSpan? timeout = default(TimeSpan? )) Parameters Type Name Description String command the command to run String workingDirectory sets the working directory for the command to be run Nullable < TimeSpan > timeout Returns Type Description ValueTuple < Process , Nullable < Boolean >> the associated process and whether or not the process exited | Improve this Doc View Source RunCommandAndWaitForExitAsync(String, String, CancellationToken) Starts a new instance of a command terminal and runs the specified command Declaration public Task<Process> RunCommandAndWaitForExitAsync(string command, string workingDirectory = \"./\", CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String command the command to run String workingDirectory sets the working directory for the command to be run CancellationToken cancellationToken cancellation token for how long the process should wait to be exited Returns Type Description Task < Process > the process | Improve this Doc View Source UpdateDefaultUserAndPassword(String, String) Declaration public void UpdateDefaultUserAndPassword(string runAsUser, string password) Parameters Type Name Description String runAsUser String password Events | Improve this Doc View Source ErrorDataReceived event handler for error responses return during the execution of the command Declaration public event DataReceivedEventHandler ErrorDataReceived Event Type Type Description DataReceivedEventHandler | Improve this Doc View Source Exited Occurs when the process exits Declaration public event EventHandler Exited Event Type Type Description EventHandler | Improve this Doc View Source OutputDataReceived event handler for responses return during the execution of the command Declaration public event DataReceivedEventHandler OutputDataReceived Event Type Type Description DataReceivedEventHandler Implements System.IDisposable"
  },
  "api/DotNetHelper_CommandLine.html": {
    "href": "api/DotNetHelper_CommandLine.html",
    "title": "Namespace DotNetHelper_CommandLine | DotNetHelper-CommandLine",
    "keywords": "Namespace DotNetHelper_CommandLine Classes CommandPrompt A command-line helper class that makes it easy to run commands. UnixCommands Helper class for common commands"
  },
  "api/DotNetHelper_CommandLine.UnixCommands.html": {
    "href": "api/DotNetHelper_CommandLine.UnixCommands.html",
    "title": "Class UnixCommands | DotNetHelper-CommandLine",
    "keywords": "Class UnixCommands Helper class for common commands Inheritance Object UnixCommands Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : DotNetHelper_CommandLine Assembly : DotNetHelper-CommandLine.dll Syntax public static class UnixCommands Methods | Improve this Doc View Source AbortShutDownOrReboot() returns the hcommand for aborting a shutdown or restart Declaration public static string AbortShutDownOrReboot() Returns Type Description String | Improve this Doc View Source CopyDirectory(String, String) Copy one directory to another Declaration public static string CopyDirectory(string from, string to) Parameters Type Name Description String from String to Returns Type Description String | Improve this Doc View Source CreateDirectory(String) returns the command to create the specified directory Declaration public static string CreateDirectory(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source GetAttribute(String) Sets ownership on files and directories Declaration public static string GetAttribute(string fileOrPath) Parameters Type Name Description String fileOrPath Returns Type Description String | Improve this Doc View Source GetEnvironmentVariables() Declaration public static string GetEnvironmentVariables() Returns Type Description String | Improve this Doc View Source GetOsVersion() return the command to get the Operating System version Declaration public static string GetOsVersion() Returns Type Description String | Improve this Doc View Source GetSystemInfo() return command for getting system info Declaration public static string GetSystemInfo() Returns Type Description String | Improve this Doc View Source GetTaskList() returns the command get the task list Declaration public static string GetTaskList() Returns Type Description String | Improve this Doc View Source MapDrive(Char, String) returns the command for mapping a drive Declaration public static string MapDrive(char driveLetter, string path) Parameters Type Name Description Char driveLetter String path Returns Type Description String | Improve this Doc View Source MoveFile(String, String) returns the commands for moving the specified file Declaration public static string MoveFile(string from, string to) Parameters Type Name Description String from String to Returns Type Description String | Improve this Doc View Source OpenControlPanel() returns the command for opening the control panel Declaration public static string OpenControlPanel() Returns Type Description String | Improve this Doc View Source OpenServices() returns the command for opening the services Declaration public static string OpenServices() Returns Type Description String | Improve this Doc View Source Ping(String) returns the command to get ping the specified host Declaration public static string Ping(string host) Parameters Type Name Description String host Returns Type Description String | Improve this Doc View Source Reboot(Boolean, Nullable<TimeSpan>, String) returns the command for rebooting the host Declaration public static string Reboot(bool force, TimeSpan? delay = default(TimeSpan? ), string message = null) Parameters Type Name Description Boolean force Nullable < TimeSpan > delay String message Returns Type Description String | Improve this Doc View Source RemoveDirectory(String) Windows has a y/ n prompt.To get the prompt with Unix, use rm - i.The i means \"interactive\". Declaration public static string RemoveDirectory(string directory) Parameters Type Name Description String directory Returns Type Description String | Improve this Doc View Source Shutdown(Boolean) returns the command for shutting down the host Declaration public static string Shutdown(bool force) Parameters Type Name Description Boolean force Returns Type Description String | Improve this Doc View Source TailFile(String, Int32) returns command for tailing the specified files Declaration public static string TailFile(string fullFilePath, int outputLastLine = 10) Parameters Type Name Description String fullFilePath Int32 outputLastLine Returns Type Description String | Improve this Doc View Source UnMapDrive(Char) returns the command for un-mapping a drive Declaration public static string UnMapDrive(char driveLetter) Parameters Type Name Description Char driveLetter Returns Type Description String"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-CommandLine | DotNetHelper-CommandLine",
    "keywords": "DotNetHelper-CommandLine static void Main(string[] args) { var cmd = new CommandPrompt(); cmd.OutputDataReceived += OnDataReceived; cmd.Exited += Exited; cmd.ErrorDataReceived += ErrorDataReceived; var process = cmd.RunCommand(\"ping www.google.com\"); // Or if you need wait until the process var processButExited = cmd.RunCommandAndWaitForExit(\"ping www.youtube.com\"); } private static void Exited(object sender, EventArgs e) { Console.WriteLine(\"command has exited.\"); } private static void ErrorDataReceived(object sender, DataReceivedEventArgs e) { Console.WriteLine(\"error : \" + e.Data); } private static void OnDataReceived(object sender, DataReceivedEventArgs args) { Console.WriteLine(\"received data : \" + args.Data); }"
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "THIS IS THE HOME PAGE TO TUTORIALS | DotNetHelper-CommandLine",
    "keywords": "THIS IS THE HOME PAGE TO TUTORIALS"
  },
  "tutorials/Test1/Test1.html": {
    "href": "tutorials/Test1/Test1.html",
    "title": "Custom Attributes | DotNetHelper-CommandLine",
    "keywords": "Custom Attributes This is just a test page Mark a property as an identity fields. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)]"
  },
  "tutorials/Test2/child1.html": {
    "href": "tutorials/Test2/child1.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-CommandLine",
    "keywords": "SAMPLE ARTICLE"
  },
  "tutorials/Test2/child2.html": {
    "href": "tutorials/Test2/child2.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-CommandLine",
    "keywords": "SAMPLE ARTICLE"
  }
}