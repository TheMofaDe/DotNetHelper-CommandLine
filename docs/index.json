{
  "api/DotNetHelper_Contracts.Tools.html": {
    "href": "api/DotNetHelper_Contracts.Tools.html",
    "title": "Namespace DotNetHelper_Contracts.Tools | DotNetHelper-CommandLine",
    "keywords": "Namespace DotNetHelper_Contracts.Tools Classes CommandPrompt A command-line helper class that makes it easy to run commands. UnixCommands Helper class for common commands"
  },
  "api/DotNetHelper_Contracts.Tools.CommandPrompt.html": {
    "href": "api/DotNetHelper_Contracts.Tools.CommandPrompt.html",
    "title": "Class CommandPrompt | DotNetHelper-CommandLine",
    "keywords": "Class CommandPrompt A command-line helper class that makes it easy to run commands. Inheritance Object CommandPrompt Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Tools Assembly : DotNetHelper-CommandLine.dll Syntax public class CommandPrompt Constructors | Improve this Doc View Source CommandPrompt(String, Boolean) Declaration public CommandPrompt(string cmdLocation = \"C:\\\\windows\\\\system32\\\\cmd.exe\", bool hideWindow = true) Parameters Type Name Description String cmdLocation Boolean hideWindow Properties | Improve this Doc View Source CreateNoWindow Declaration public bool CreateNoWindow { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RedirectStandardError Declaration public bool RedirectStandardError { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RedirectStandardOutput Declaration public bool RedirectStandardOutput { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UseShellExecute Declaration public bool UseShellExecute { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source CreateStartInfo(String, String, Boolean, DataReceivedEventHandler, DataReceivedEventHandler) Declaration public ProcessStartInfo CreateStartInfo(string command, string workingDirectory, bool hideWindow = true, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null) Parameters Type Name Description String command command to run String workingDirectory directory to run command from Boolean hideWindow self-explained. If true will show command promopt during execution of thecommand DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command Returns Type Description ProcessStartInfo | Improve this Doc View Source RunCommand(ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(ProcessStartInfo info, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(string command, ProcessStartInfo info = null, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description String command ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code | Improve this Doc View Source RunCommand(String, String, ProcessStartInfo, DataReceivedEventHandler, DataReceivedEventHandler, EventHandler) Declaration public int? RunCommand(string command, string workingDirectory, ProcessStartInfo info = null, DataReceivedEventHandler outputDataReceived = null, DataReceivedEventHandler errorDataReceived = null, EventHandler exited = null) Parameters Type Name Description String command the command to run String workingDirectory ProcessStartInfo info DataReceivedEventHandler outputDataReceived event handler for responses return during the execution of the command DataReceivedEventHandler errorDataReceived event handler for error responses return during the execution of the command EventHandler exited Returns Type Description Nullable < Int32 > the process Exit Code"
  },
  "api/DotNetHelper_Contracts.Tools.UnixCommands.html": {
    "href": "api/DotNetHelper_Contracts.Tools.UnixCommands.html",
    "title": "Class UnixCommands | DotNetHelper-CommandLine",
    "keywords": "Class UnixCommands Helper class for common commands Inheritance Object UnixCommands Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Contracts.Tools Assembly : DotNetHelper-CommandLine.dll Syntax public static class UnixCommands Methods | Improve this Doc View Source AbortShutDownOrReboot() returns the hcommand for aborting a shutdown or restart Declaration public static string AbortShutDownOrReboot() Returns Type Description String | Improve this Doc View Source CopyDirectory(String, String) Copy one directory to another Declaration public static string CopyDirectory(string from, string to) Parameters Type Name Description String from String to Returns Type Description String | Improve this Doc View Source CreateDirectory(String) returns the command to create the specified directory Declaration public static string CreateDirectory(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source GetAttribute(String) Sets ownership on files and directories Declaration public static string GetAttribute(string fileOrPath) Parameters Type Name Description String fileOrPath Returns Type Description String | Improve this Doc View Source GetEnvironmentVariables() Declaration public static string GetEnvironmentVariables() Returns Type Description String | Improve this Doc View Source GetOsVersion() return the command to get the Operating System version Declaration public static string GetOsVersion() Returns Type Description String | Improve this Doc View Source GetSystemInfo() return command for getting system info Declaration public static string GetSystemInfo() Returns Type Description String | Improve this Doc View Source GetTaskList() returns the command get the task list Declaration public static string GetTaskList() Returns Type Description String | Improve this Doc View Source MapDrive(Char, String) returns the command for mapping a drive Declaration public static string MapDrive(char driveLetter, string path) Parameters Type Name Description Char driveLetter String path Returns Type Description String | Improve this Doc View Source MoveFile(String, String) returns the commands for moving the specified file Declaration public static string MoveFile(string from, string to) Parameters Type Name Description String from String to Returns Type Description String | Improve this Doc View Source OpenControlPanel() returns the command for opening the control panel Declaration public static string OpenControlPanel() Returns Type Description String | Improve this Doc View Source OpenServices() returns the command for opening the services Declaration public static string OpenServices() Returns Type Description String | Improve this Doc View Source Ping(String) returns the command to get ping the specified host Declaration public static string Ping(string host) Parameters Type Name Description String host Returns Type Description String | Improve this Doc View Source Reboot(Boolean, Nullable<TimeSpan>, String) returns the command for rebooting the host Declaration public static string Reboot(bool force, TimeSpan? delay = default(TimeSpan? ), string message = null) Parameters Type Name Description Boolean force Nullable < TimeSpan > delay String message Returns Type Description String | Improve this Doc View Source RemoveDirectory(String) Windows has a y/ n prompt.To get the prompt with Unix, use rm - i.The i means \"interactive\". Declaration public static string RemoveDirectory(string directory) Parameters Type Name Description String directory Returns Type Description String | Improve this Doc View Source Shutdown(Boolean) returns the command for shutting down the host Declaration public static string Shutdown(bool force) Parameters Type Name Description Boolean force Returns Type Description String | Improve this Doc View Source TailFile(String, Int32) returns command for tailing the specified files Declaration public static string TailFile(string fullFilePath, int outputLastLine = 10) Parameters Type Name Description String fullFilePath Int32 outputLastLine Returns Type Description String | Improve this Doc View Source UnMapDrive(Char) returns the command for un-mapping a drive Declaration public static string UnMapDrive(char driveLetter) Parameters Type Name Description Char driveLetter Returns Type Description String"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-CommandLine | DotNetHelper-CommandLine",
    "keywords": "DotNetHelper-CommandLine A command-line helper class that makes it easy to run commands. How to use static void Main(string[] args) { var cmd = new CommandPrompt(); cmd.RunCommand(UnixCommands.Ping(\"www.google.com\"), null, OnDataReceived, ErrorDataReceived, Exited); cmd.RunCommand(UnixCommands.Ping(\"This is not a valid command\"), null, OnDataReceived, ErrorDataReceived, Exited); Console.ReadLine(); } private static void Exited(object sender, EventArgs e) { Console.WriteLine(\"command has finished.\"); } private static void ErrorDataReceived(object sender, DataReceivedEventArgs e) { Console.WriteLine(\"error : \" + e.Data); } private static void OnDataReceived(object sender, DataReceivedEventArgs args) { Console.WriteLine(\"received data : \" + args.Data); } } ##Produces Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  }
}